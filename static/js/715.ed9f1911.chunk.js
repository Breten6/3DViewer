/*! For license information please see 715.ed9f1911.chunk.js.LICENSE.txt */
(()=>{"use strict";var e={6031:e=>{e.exports={decompress:function(e){var t=new Uint8Array(e),n=[],r=0,s=0;do{var o=t[r++];if(o<32){if(r+ ++o>t.length)throw new Error("Invalid input");for(;o--;)n[s++]=t[r++]}else{var i=o>>5,l=s-((31&o)<<8)-1;if(r>=t.length)throw new Error("Invalid input");if(7==i&&(i+=t[r++],r>=t.length))throw new Error("Invalid input");if((l-=t[r++])<0)throw new Error("Invalid input");i+=2;do{n[s++]=n[l++]}while(--i)}}while(r<t.length);if("undefined"!==typeof Buffer)return new Buffer(n);var a=new Uint8Array(n.length);return a.set(n),a},compress:function(e){function t(e,t){return e[t]<<8|e[t+1]}function n(e,t,n){return e<<8|t[n+2]}function r(e){return 506832829*e>>8&65535}for(var s=new Uint8Array(e),o=[],i=new Uint32Array(65536),l=s.length,a=0,f=t(s,a),c=1,p=0;a<l-2;){var u,g=r(f=n(f,e,a)),h=i[g];if(i[g]=a,h<a&&(u=a-h-1)<8192&&h>0&&s[h+2]==s[a+2]&&s[h+1]==s[a+1]&&s[h]==s[a]){var d=2,m=l-a-d;m=m>264?264:m,o[c-p-1]=p-1&255,0==p&&(c-=1);do{d++}while(d<m&&s[h+d]==s[a+d]);if(a++,(d-=2)<7?o[c++]=(u>>8)+(d<<5)&255:(o[c++]=224+(u>>8)&255,o[c++]=d-7&255),o[c++]=255&u,p=0,c++,(a+=d+1)>=l-2)break;--a,i[r(f=n(f=t(s,--a),s,a))]=a++,i[r(f=n(f,s,a))]=a++}else p++,o[c++]=s[a++],32==p&&(o[c-p-1]=p-1&255,p=0,c++)}for(;a<l;)p++,o[c++]=s[a++],32==p&&(o[c-p-1]=p-1&255,p=0,c++);if(0!=p&&(o[c-p-1]=p-1&255),"undefined"!==typeof Buffer)return new Buffer(o);var y=new Uint8Array(o.length);return y.set(o),y}}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r=n(6031),s=n.n(r);self.onmessage=function(e){const{fileType:t,arrayBuffer:n,text:r,fileName:o,size:i}=e.data;console.log("Worker received message:",e.data);try{let e=null;if(".pcd"===t&&n)e=function(e,t,n){console.log("Parsing .pcd file with ArrayBuffer");const r=(new TextDecoder).decode(e),o=r.split(/\r?\n/),i={};let l=0;for(let s=0;s<o.length;s++){const e=o[s].trim();if(!e)continue;if(e.startsWith("DATA")){const t=e.split(/\s+/);i.DATA=t[1]||"ascii",l=s+1;break}const[t,...n]=e.split(/\s+/);i[t]=n.join(" ")}i.DATA||(i.DATA="ascii");const a=i.DATA.toLowerCase(),f=(i.FIELDS||"").split(/\s+/),c=(i.SIZE||"").split(/\s+/).map(Number),p=(i.TYPE||"").split(/\s+/),u=(i.COUNT||"").split(/\s+/).map(Number),g=parseInt(i.POINTS||"0",10);let h=0;{let e=0,t=0;for(;e<l&&t<r.length;)"\n"===r[t]&&e++,t++;h=t}let d=[],m=0;if("ascii"===a){const t=function(e,t){const n=new TextDecoder,r=n.decode(e.slice(t)),s=r.split(/\r?\n/).filter((e=>""!==e.trim())),o=[];let i=0;const l=s.length;for(let a=0;a<s.length;a++){if(a%5e3===0){const e=Math.floor(a/l*100);self.postMessage({progress:e})}const e=s[a].trim().split(/\s+/).map(parseFloat);if(e.length>=3){const t=e[0],n=e[1],r=e[2];isFinite(t)&&isFinite(n)&&isFinite(r)?o.push({x:t,y:n,z:r}):i++}else i++}return self.postMessage({progress:100}),{points:o,invalidLines:i}}(e,h);d=t.points,m=t.invalidLines}else if("binary"===a)d=function(e,t,n,r,s,o,i){const l=new DataView(e,t);let a=0;const f=[];for(let u=0;u<r.length;u++)f.push(a),a+=s[u]*i[u];const c=[],p=n;for(let u=0;u<p;u++){if(u%5e3===0){const e=Math.floor(u/p*100);self.postMessage({progress:e})}const e={};for(let t=0;t<r.length;t++){const n=r[t],c=o[t],p=s[t],g=i[t],h=u*a+f[t];"x"!==n&&"y"!==n&&"z"!==n||(e[n]="F"===c&&4===p&&1===g?l.getFloat32(h,!0):"I"===c&&4===p&&1===g?l.getInt32(h,!0):"U"===c&&4===p&&1===g?l.getUint32(h,!0):null)}c.push(e)}return self.postMessage({progress:100}),c}(e,h,g,f,c,p,u);else{if("binary_compressed"!==a)throw new Error("Unsupported DATA format: ".concat(i.DATA));d=function(e,t,n,r,o,i){const l=new DataView(e,t);if(l.byteLength<8)throw new Error("Not enough data to read compressedSize/uncompressedSize.");const a=l.getUint32(0,!0),f=l.getUint32(4,!0);if(l.byteLength<8+a)throw new Error("Buffer is too short for the indicated compressedSize");const c=new Uint8Array(e,t+8,a);let p;try{p=s().decompress(c,f)}catch(g){throw new Error("LZFJS decompress error: "+g.message)}p.length!==f&&console.warn("LZF: mismatch uncompressedSize => got=".concat(p.length,", expected=").concat(f));const{points:u}=function(e,t,n,r,s){const o=n.length,i=(r.reduce(((e,t)=>e+t),0),new DataView(e.buffer,e.byteOffset,e.byteLength)),l=[];{let e=0;for(let n=0;n<o;n++)l.push(e),e+=r[n]*t}const a=[];for(let c=0;c<t;c++){if(c%5e3===0){const e=Math.floor(c/t*100);self.postMessage({progress:e})}const e={};for(let t=0;t<o;t++){const o=n[t],a=s[t],f=r[t],p=l[t]+c*f;"x"!==o&&"y"!==o&&"z"!==o||(e[o]="F"===a&&4===f?i.getFloat32(p,!0):"I"===a&&4===f?i.getInt32(p,!0):"U"===a&&4===f?i.getUint32(p,!0):null)}a.push(e)}const f=a.filter((e=>isFinite(e.x)&&isFinite(e.y)&&isFinite(e.z)));return{points:f}}(p,n,r,o,i);return self.postMessage({progress:100}),u}(e,h,g,f,c,p)}let y=1/0,w=1/0,x=1/0,v=-1/0,z=-1/0,F=-1/0;for(const s of d)s.x<y&&(y=s.x),s.y<w&&(w=s.y),s.z<x&&(x=s.z),s.x>v&&(v=s.x),s.y>z&&(z=s.y),s.z>F&&(F=s.z);return{type:"pcd",fileName:t,size:n,pointCount:d.length,boundingBox:{minX:y,minY:w,minZ:x,maxX:v,maxY:z,maxZ:F},points:d,invalidLines:m}}(n,o,i);else if(".xyz"===t&&r)e=function(e,t,n){console.log("Parsing .xyz file");const r=e.split(/\r?\n/).filter((e=>""!==e.trim())),s=[];let o=0;const i=r.length;r.forEach(((e,t)=>{if(t%5e3===0){const e=Math.floor(t/i*100);self.postMessage({progress:e})}const n=e.trim().split(/[\s,]+/);if(n.length<3)return void o++;const[r,l,a]=n,f=parseFloat(r),c=parseFloat(l),p=parseFloat(a);isFinite(f)&&isFinite(c)&&isFinite(p)?s.push({x:f,y:c,z:p}):o++})),self.postMessage({progress:100});let l=1/0,a=1/0,f=1/0,c=-1/0,p=-1/0,u=-1/0;return s.forEach((e=>{e.x<l&&(l=e.x),e.y<a&&(a=e.y),e.z<f&&(f=e.z),e.x>c&&(c=e.x),e.y>p&&(p=e.y),e.z>u&&(u=e.z)})),{type:"xyz",fileName:t,size:n,pointCount:s.length,boundingBox:{minX:l,minY:a,minZ:f,maxX:c,maxY:p,maxZ:u},points:s,invalidLines:o}}(r,o,i);else{if(".geojson"!==t&&".json"!==t||!r)throw new Error("Unsupported file type or data mismatch: ".concat(t));e=function(e,t,n){console.log("Parsing GeoJSON");const r=JSON.parse(e);if(!r.type||"FeatureCollection"!==r.type&&"Feature"!==r.type)throw new Error("Invalid GeoJSON format");return{type:"geojson",fileName:t,size:n,geoJSON:r}}(r,o,i)}self.postMessage({success:!0,data:e})}catch(l){console.error("Worker error:",l),self.postMessage({success:!1,error:l.message})}}})();
//# sourceMappingURL=715.ed9f1911.chunk.js.map